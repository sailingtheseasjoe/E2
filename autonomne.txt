@name Autonomne
@inputs Ball:entity
@outputs 
@persist OwnColor:vector Car:entity Pod:wirelink EntList:array
@trigger 

interval(100)

if(first() | duped()) {
    Car = entity():isWeldedTo()
    Pod = Car:wirelink()   
    
    EntList = array( Car, entity() )
    
    rangerHitWater(0)
    rangerHitEntities(1) 
    rangerIgnoreWorld(0)
    rangerDefaultZero(0)
        
    #rangerFlags("ewz")
        
    rangerFilter(EntList)
    
    OwnColor = Car:getColor()
}

Ranger1 = rangerOffset( 200, entity():toWorld(vec(0,0,0)), -Car:right() )

#TargetVec = Ball:pos() - Car:pos()
Steer = entity():bearing(Ball:pos()) / 50
Throttle = 100
Reverse = 0
HandBrake = 0


if(Ranger1:hit()) {
    if( Ranger1:matType() == "metal" && Ranger1:entity():getColor() == OwnColor ) {
        #HandBrake = 100
        Throttle = -100
        Steer *= -1
    }

    if( Ranger1:entity():toString() == "(null)" && round(Ranger1:distance()) < 80) {
        Reverse = 1
        Throttle = -100
        Steer *= -1
    }
    
    if( Ranger1:entity():type() == "player" && round(Ranger1:distance()) < 100) {
        HandBrake = 100
        Throttle = 0
        soundPlay(2,1.9,"vehicles/ctvehicles/apc/apc_alarm_loop1.wav")
    }
    
    
    
    #print( round(Ranger1:distance()) + "  " + Ranger1:entity():type())
    #print( round(Ranger1:distance()) + "  " + Ranger1:entity():toString())    
    #print( Ranger1:matType())
    #print( Ranger1:entity():getColor())
    
    #vozidlo  gmod_sent_vehicle_fphysics_base   mat:
    #gula     prop_physics                      mat:plastic
        
    
    #print( Ranger1)
    #print( Ranger1:hitGroup())
    #print( Ranger1:getColor())
}

Pod["Handbrake", number] = HandBrake
Pod["Brake/Reverse", number] = Reverse
Pod["Steer", number] = Steer
Pod["Engine Stop", number] = 0
Pod["Engine Start", number] = 1
Pod["Throttle", number] = Throttle
