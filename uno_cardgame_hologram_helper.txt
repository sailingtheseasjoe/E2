@name UNO_CardGame_Hologram_helper
@persist CurrentTextLength:number [C,HologramCounter]:number
@inputs TopCard:array
function void newCardText(S:string,From:number,Color:vector,Offset:vector,Rotation:angle,Size:vector)
{
    
    for(I=From,S:length())
    {
        if(S[I]!=" ")
        {
            C++
            holoCreate(C,entity():pos()+vec(10*(I-1),0,0)+Offset,Size,Rotation,vec(0,0,0))
            HoloString = "models/sprops/misc/alphanum/alphanum_"+S[I]:lower()+".mdl"
            #print(HoloString)
            holoModel(C,HoloString)
            #holoParent(HologramCounter,entity())
            if(S[I] == "+")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_plu.mdl")
            }
            
            elseif(S[I] == ",")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_com.mdl")
            }
            elseif(S[I] == "#")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_pdsign.mdl")
            }
            elseif(S[I] == "-")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_min.mdl")
            }
            elseif(S[I] == ".")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_prd.mdl")
            }
            elseif(S[I] == "'")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_apost.mdl")
            }
            elseif(S[I] == "?")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_qmark.mdl")
            }
            elseif(S[I] == "!")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_xmark.mdl")
            }
            elseif(S[I] == "%")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_pcnt.mdl")
            }
            elseif(S[I] == "/")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_div.mdl")
            }
            elseif(S[I] == "_")
            {
                holoModel(C,"models/sprops/misc/alphanum/alphanum_underscore.mdl")
            }
            holoColor(C,Color)
            #holoAng(C, Rotation)
        }
        
    }
    holoParent(C,8)
}
function void newFloatingText(S:string,From:number,Color:vector,Offset:vector,Rotation:angle,Size:vector)
{
    for(I=From,S:length())
    {
        if(S[I]!=" ")
        {
            HologramCounter++
            holoCreate(HologramCounter,entity():pos()+vec(55*(I-2),0,0)+Offset,Size,ang(0,180,0),vec(0,0,0))
            HoloString = "models/sprops/misc/alphanum/alphanum_"+S[I]:lower()+".mdl"
            #print(HoloString)
            holoModel(HologramCounter,HoloString)
            #holoParent(HologramCounter,entity())
            if(S[I] == ",")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_com.mdl")
            }
            elseif(S[I] == "#")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_pdsign.mdl")
            }
            elseif(S[I] == "-")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_min.mdl")
            }
            elseif(S[I] == ".")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_prd.mdl")
            }
            elseif(S[I] == "'")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_apost.mdl")
            }
            elseif(S[I] == "?")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_qmark.mdl")
            }
            elseif(S[I] == "!")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_xmark.mdl")
            }
            elseif(S[I] == "%")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_pcnt.mdl")
            }
            elseif(S[I] == "/")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_div.mdl")
            }
            elseif(S[I] == "_")
            {
                holoModel(HologramCounter,"models/sprops/misc/alphanum/alphanum_underscore.mdl")
            }
            holoColor(HologramCounter,Color)
        }
        
    }
    holoParent(HologramCounter-2,HologramCounter-1)
    holoParent(HologramCounter,HologramCounter-1)
    holoAng(HologramCounter-1, Rotation)
}
if(first())
{
    HologramCounter = 0
    newFloatingText("UNO",1,vec(255,255,0),vec(0,5,200),ang(0,0,0),vec(5,1,5))
    newFloatingText("UNO",1,vec(255,255,0),vec(0,-5,200),ang(0,180,0),vec(5,1,5))
    HologramCounter++
    holoCreate(HologramCounter,entity():pos()+vec(0,0,200),vec(15,0.5,6))
    for(I=1,HologramCounter-1)
    {
        holoParent(I,HologramCounter)
    }
    holoColor(HologramCounter,vec(255,0,0))
    HologramCounter++
    holoCreate(HologramCounter,entity():pos()+vec(0,0,20),vec(2,0.1,3))
    holoColor(HologramCounter,vec(255,255,255))
}
if(~TopCard)
{
    if(TopCard[1,string]=="green")
    {
        Color = vec(0,210,0)
    }
    elseif(TopCard[1,string]=="red")
    {
        Color = vec(210,0,0)
    }
    elseif(TopCard[1,string]=="blue")
    {
        Color = vec(0,0,210)
    }
    elseif(TopCard[1,string]=="yellow")
    {
        Color = vec(210,210,0)
    }
    elseif(TopCard[1,string]=="any")
    {
        Color = vec(0,0,0)
    }
    
    C = 9
    newCardText(TopCard[2,string],1,vec(255,255,255),vec(0,-1,20),ang(0,180,0),vec(1,0.1,1))
    newCardText(TopCard[2,string],1,vec(255,255,255),vec(0,1,20),ang(0,0,0),vec(1,0.1,1))
    #HologramCounter -= 2
}
interval(100)
holoAng(7,ang(0,-curtime()*50,0))
holoAng(8,ang(0,-curtime()*50,0))
