@name Matyitorial
@persist Names:array

if(first() && !duped())
{
    Names = array("Aladar","Alessio","Bambalino","Bimbi")
}

function void countNames(A:string, B:array)
{
    #Van egy tombunk. Szamold meg, hogy hany nev kezdodik benne "A"-val
    
    local N = 0 #Letrehozol egy lokalis valtozot. Ezt a function-on kivul nem fogod tudni hasznalni.
    
    #Kell egy eloirt lepesszamu ciklus, mert tudjuk elore hogy mekkora a tomb
    #Az I valtozot 1-re allitjuk I = 1-el
    #A vesszo utan azt allitjuk be, hogy mikor alljon meg a ciklus. Itt ha elerte a B tomb elemeinek a szamat, akkor kilep.
    #A ciklus vegen mindig hozzaad egyet az I valtozohoz.
    
    for(I = 1, B:count()){
        
        if( B[I,string]:sub(1,1) == A )
        {
            N++
        }
    }
    
    local Tomb1 = array(5,10,2,95,7,65,1,22,745,34)
    local Tomb2 = array()
    
    Legkisebb = Tomb1[1,number]
    
    while(Tomb1:count() > 1){
        LegkisebbIndex = 1
        Legkisebb = Tomb1[LegkisebbIndex,number]
        for(J=2,Tomb1:count()){
            if(Legkisebb > Tomb1[J,number]){
                Legkisebb = Tomb1[J,number]
                LegkisebbIndex = J
            }
        }
        Tomb2:pushNumber(Tomb1:removeNumber(LegkisebbIndex))
    }
    
    printTable(Tomb2)
    
}

countNames("A",Names)
