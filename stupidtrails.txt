@name StupidTrails
@inputs 
@outputs 
@persist [DelayedPosition,DelayedAng,DelayedVelocity,DelayedAngVel]:array Target:entity [TickDelay,NumHolos,I,TickDelayBetweenHolos]:number Model:string
@trigger 
#@model models/Combine_Helicopter/helicopter_bomb01.mdl
#Made by HugLemper, but I don't give a fuck who uses it.
#Put it on a prop or vehicle and it will put stupid trails on it
if(first())
{
    
    Size = 1
    Color = vec(255,255,255)
    HoloSize = vec(Size,Size,Size)
    NumHolos = 40
    TickDelay = 2000
    TickDelayBetweenHolos = TickDelay/NumHolos
    #findByClass("player")
    #findByClass("gmod_sent_vehicle_fphysics_base")
    #Target = findClosest(entity():pos())
    
    #Model = "models/Combine_Helicopter/helicopter_bomb01.mdl"
    Target = entity():getConstraints()[1,entity]
    #Target = owner()
    #findByClass("prop_physics")
    #Target = findClosest(entity():pos())
    print(Target)
    Model = Target:model()
    
    print(Model)
    for(I=1,NumHolos)
    {
        
        holoCreate(I,Target:pos(),HoloSize)
        #holoModel(I,Model)
        holoColor(I,Color)
        #holoModel(I,"models/mossman.mdl")
        #holoColor(I,vec(255,0,0))
        #holoAnim(I,20)
        #holoMaterial(I,"engine/singlecolor")
        #holoColor(I,vec(255,255,0))
    }
    print("Created "+holoRemainingSpawns()+" holos")
    holoCreate(1,entity():pos())
    
}
runOnTick(1)

    DelayedVelocity:pushVector(Target:vel())
    DelayedAng:pushAngle(Target:angles())
    DelayedAngVel:pushAngle(Target:angVel())
    for(I=1,NumHolos)
    {
        DelayedPosition[I,vector] = DelayedPosition[I,vector]+DelayedVelocity[I,vector]
        #holoPos(I,DelayedPosition[(I+1)*40,vector])
        holoPos(I,DelayedPosition[I,vector])
        #holoAng(I,DelayedAng[(I+1)*40,angle])
        holoAng(I,DelayedAng[I,angle]+DelayedAng[(I+1)*40,angle])
        #holoMaterial(I,"engine/singlecolor")
        #holoColor(I,vec(255,255,0))
    }
    
if(DelayedPosition:count()>TickDelay)
{
    NewPos = DelayedPosition:shiftVector()
    NewAng = DelayedAng:shiftAngle()
}
